{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Chessehc.vue?fd5c","webpack:///./src/App.vue","webpack:///./src/components/Chessehc.vue","webpack:///./src/components/Chessehc.vue?62b5","webpack:///./src/components/Chessehc.vue?bf69","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","reverseBoards","board","time","squares","square","index","piece","styleClass","text","Owner","Tense","TimeDirection","MoveForwardPieces","x","y","selected_square","selected_board_index","boards","findIndex","e","current_board","next_board","undefined","makeFuture","boards_size","board_i_selected_square","at","board_i_clicked_square","direction","forward","tense","future","board_i_selected_piece_tence","past","present","MoveInvertedPieces","unshift","makePast","inverted","owner","this","me","Piece","Square","clone","width","Squares","map","Array","fill","square_ref","piece_ref","SelectedSquare","Board","mounted","obj","empty","you","methods","clickSquare","selected_direction","squareColor","computed","reverse","render","__scopeId","components","Chessehc","App","mount"],"mappings":"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","file":"js/app.bef7be8a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/chessehc/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Chessehc.vue?vue&type=style&index=0&id=abda89c0&scoped=true&lang=css\"","<template>\n  <Chessehc/>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Chessehc from \"./components/Chessehc.vue\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Chessehc,\n  },\n});\n</script>\n","<template>\n  <div class=\"chessehc\">\n    <div v-for=\"board in reverseBoards\" :key=\"board.time\">\n      t = {{ board.time }}\n      <div class=\"board\">\n        <div v-for=\"(square, index) in board.squares.value\" :key=\"index\">\n          <div\n            class=\"square\"\n            v-bind:class=\"\n              squareColor(\n                square,\n                index % board.squares.width,\n                Math.floor(index / board.squares.width)\n              )\n            \"\n            @click=\"\n              clickSquare(\n                square,\n                index % board.squares.width,\n                Math.floor(index / board.squares.width),\n                board.time\n              )\n            \"\n          >\n            <div\n              class=\"piece\"\n              v-bind:class=\"square.piece.styleClass()\"\n              v-if=\"square.piece\"\n            >\n              {{ square.piece.text() }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script lang=\"ts\">\nenum Owner {\n  me,\n  you,\n}\n\nenum Tense {\n  past,\n  present,\n  future,\n}\n\nenum TimeDirection {\n  forward,\n  inverted,\n}\nfunction MoveForwardPieces(data: Chessehc, x: number, y: number, t: number) {\n  // suppress error\n  if (data.selected_square === null) {\n    return;\n  }\n\n  const selected_board_index = data.boards.findIndex((e) => e.time === t)!;\n\n  let current_board = data.boards[selected_board_index];\n  let next_board = data.boards[selected_board_index + 1];\n  if (next_board === undefined) {\n    // make future board\n    data.boards.push(current_board.makeFuture());\n  } else {\n    const boards_size = data.boards.length;\n\n    // move future pieces\n    // copy future pieces\n    for (let i = selected_board_index + 1; i < boards_size; ++i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      let board_i_clicked_square = data.boards[i].squares.at(x, y);\n      if (\n        board_i_clicked_square.piece === null ||\n        (board_i_clicked_square.piece.direction === TimeDirection.forward &&\n          board_i_clicked_square.piece.tense === Tense.future)\n        // TODO: case that both forward and inverted future pieces in the same square\n      ) {\n        board_i_clicked_square.piece = board_i_selected_square.piece;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n    // delete future selected pieces\n    for (let i = selected_board_index + 1; i < boards_size; ++i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      if (\n        board_i_selected_square.piece !== null &&\n        board_i_selected_square.piece.direction === TimeDirection.forward &&\n        board_i_selected_square.piece.tense === Tense.future\n      ) {\n        board_i_selected_square.piece = null;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n  }\n  // change tense of past pieces\n  for (let i = selected_board_index - 1; i >= 0; --i) {\n    let board_i_selected_square = data.boards[i].squares.at(\n      data.selected_square.x,\n      data.selected_square.y\n    );\n    let board_i_selected_piece_tence = board_i_selected_square.piece!.tense;\n    board_i_selected_square.piece!.tense = Tense.past;\n    if (board_i_selected_piece_tence === Tense.present) {\n      // blocked by present piece\n      break;\n    }\n  }\n}\nfunction MoveInvertedPieces(data: Chessehc, x: number, y: number, t: number) {\n  // suppress error\n  if (data.selected_square === null) {\n    return;\n  }\n\n  let selected_board_index = data.boards.findIndex((e) => e.time === t)!;\n\n  let current_board = data.boards[selected_board_index];\n  let next_board = data.boards[selected_board_index - 1];\n  if (next_board === undefined) {\n    // make future board\n    data.boards.unshift(current_board.makePast());\n    selected_board_index = selected_board_index + 1;\n  } else {\n    // move future pieces\n    // copy future pieces\n    for (let i = selected_board_index - 1; i >= 0; --i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      let board_i_clicked_square = data.boards[i].squares.at(x, y);\n      if (\n        board_i_clicked_square.piece === null ||\n        (board_i_clicked_square.piece.direction === TimeDirection.inverted &&\n          board_i_clicked_square.piece.tense === Tense.future)\n        // TODO: case that both forward and inverted future pieces in the same square\n      ) {\n        board_i_clicked_square.piece = board_i_selected_square.piece;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n    // delete future selected pieces\n    for (let i = selected_board_index - 1; i >= 0; --i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      if (\n        board_i_selected_square.piece !== null &&\n        board_i_selected_square.piece.direction === TimeDirection.inverted &&\n        board_i_selected_square.piece.tense === Tense.future\n      ) {\n        board_i_selected_square.piece = null;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n  }\n  const boards_size = data.boards.length;\n  // change tense of past pieces\n  for (let i = selected_board_index + 1; i < boards_size; ++i) {\n    let board_i_selected_square = data.boards[i].squares.at(\n      data.selected_square.x,\n      data.selected_square.y\n    );\n    let board_i_selected_piece_tence = board_i_selected_square.piece!.tense;\n    board_i_selected_square.piece!.tense = Tense.past;\n    if (board_i_selected_piece_tence === Tense.present) {\n      // blocked by present piece\n      break;\n    }\n  }\n}\n\nclass Piece {\n  owner: Owner;\n  tense: Tense;\n  direction: TimeDirection;\n  constructor(owner: Owner, tense: Tense, direction: TimeDirection) {\n    this.owner = owner;\n    this.tense = tense;\n    this.direction = direction;\n  }\n  text() {\n    return this.owner == Owner.me ? \"▲\" : \"▼\";\n  }\n  styleClass() {\n    switch (this.tense) {\n      case Tense.past:\n        return this.direction === TimeDirection.forward\n          ? \"piece-forward-past\"\n          : \"piece-inverted-past\";\n      case Tense.present:\n        return this.direction === TimeDirection.forward\n          ? \"piece-forward-present\"\n          : \"piece-inverted-present\";\n      case Tense.future:\n        return this.direction === TimeDirection.forward\n          ? \"piece-forward-future\"\n          : \"piece-inverted-future\";\n    }\n  }\n  clone() {\n    return new Piece(this.owner, this.tense, this.direction);\n  }\n  makeFuture() {\n    if (this.tense === Tense.present) {\n      if (this.direction === TimeDirection.forward) {\n        return new Piece(this.owner, Tense.future, this.direction);\n      } else {\n        return null;\n      }\n    } else {\n      return new Piece(this.owner, this.tense, this.direction);\n    }\n  }\n  makePast() {\n    if (this.tense === Tense.present) {\n      if (this.direction === TimeDirection.forward) {\n        return null;\n      } else {\n        return new Piece(this.owner, Tense.future, this.direction);\n      }\n    } else {\n      return new Piece(this.owner, this.tense, this.direction);\n    }\n  }\n  invert() {\n    this.direction =\n      this.direction === TimeDirection.forward\n        ? TimeDirection.inverted\n        : TimeDirection.forward;\n  }\n}\n\nclass Square {\n  piece: Piece | null;\n  constructor(piece: Piece | null) {\n    this.piece = piece;\n  }\n  clone() {\n    return new Square(this.piece ? this.piece.clone() : null);\n  }\n  makeFuture() {\n    return new Square(this.piece ? this.piece.makeFuture() : null);\n  }\n  makePast() {\n    return new Square(this.piece ? this.piece.makePast() : null);\n  }\n}\nclass Squares {\n  width: number;\n  value: Square[];\n  constructor(width: number, value: Square[]) {\n    this.width = width;\n    this.value = value;\n  }\n  static empty(x: number, y: number) {\n    return new Squares(\n      x,\n      Array(x * y)\n        .fill({})\n        .map((e) => new Square(null))\n    );\n  }\n  at(x: number, y: number) {\n    return this.value[y * this.width + x];\n  }\n  makeFuture() {\n    return new Squares(\n      this.width,\n      this.value.map((e) => e.makeFuture())\n    );\n  }\n  makePast() {\n    return new Squares(\n      this.width,\n      this.value.map((e) => e.makePast())\n    );\n  }\n}\n\nclass SelectedSquare {\n  square_ref: Square;\n  piece_ref: Piece;\n  x: number;\n  y: number;\n  t: number;\n  constructor(\n    square_ref: Square,\n    piece_ref: Piece,\n    x: number,\n    y: number,\n    t: number\n  ) {\n    this.square_ref = square_ref;\n    this.piece_ref = piece_ref;\n    this.x = x;\n    this.y = y;\n    this.t = t;\n  }\n  clone() {\n    return new SelectedSquare(\n      this.square_ref,\n      this.piece_ref,\n      this.x,\n      this.y,\n      this.t\n    );\n  }\n}\n\nclass Board {\n  time: number;\n  squares: Squares;\n  constructor(time: number, squares: Squares) {\n    this.time = time;\n    this.squares = squares;\n  }\n  makeFuture() {\n    return new Board(this.time + 1, this.squares.makeFuture());\n  }\n  makePast() {\n    return new Board(this.time - 1, this.squares.makePast());\n  }\n}\n\nimport { defineComponent } from \"vue\";\n\ninterface Chessehc {\n  boards: Board[];\n  selected_square: null | SelectedSquare;\n}\n\nexport default defineComponent({\n  name: \"Chessehc\",\n  data() {\n    return {\n      boards: [] as Board[],\n      selected_square: null as null | SelectedSquare,\n    } as Chessehc;\n  },\n  mounted() {\n    let obj = Squares.empty(8, 8);\n    this.boards = [new Board(0, obj)];\n    for (let i = 0; i < 16; ++i) {\n      this.boards[0].squares.value[i].piece = new Piece(\n        Owner.you,\n        Tense.present,\n        TimeDirection.forward\n      );\n    }\n    for (let i = 0; i < 16; ++i) {\n      this.boards[0].squares.value[48 + i].piece = new Piece(\n        Owner.me,\n        Tense.present,\n        TimeDirection.forward\n      );\n    }\n    this.boards[0].squares.value[62].piece!.direction = TimeDirection.inverted;\n    this.boards[0].squares.value[63].piece!.direction = TimeDirection.inverted;\n    this.boards.push(this.boards[0].makeFuture());\n    this.boards.unshift(this.boards[0].makePast());\n  },\n  methods: {\n    clickSquare(square: Square, x: number, y: number, t: number) {\n      if (this.selected_square === null) {\n        // select\n        if (square.piece) {\n          if (square.piece.tense === Tense.future) {\n            this.selected_square = new SelectedSquare(\n              square,\n              square.piece,\n              x,\n              y,\n              t\n            );\n          }\n        }\n        return;\n      }\n\n      // if click same square\n      if (square === this.selected_square.square_ref) {\n        // cancel\n        this.selected_square = null;\n        return;\n      }\n\n      // move\n      if (this.selected_square.t === t) {\n        // move current piece\n        square.piece = this.selected_square.piece_ref;\n        square.piece.tense = Tense.present;\n        this.selected_square.square_ref.piece = null;\n\n        let selected_direction = this.selected_square.piece_ref.direction;\n        if (selected_direction === TimeDirection.forward) {\n          MoveForwardPieces(this, x, y, t);\n        } else {\n          MoveInvertedPieces(this, x, y, t);\n        }\n\n        this.selected_square = null;\n      }\n    },\n    squareColor(square: Square, x: number, y: number) {\n      if (\n        this.selected_square !== null &&\n        this.selected_square.square_ref === square\n      ) {\n        return \"square-moving\";\n      }\n      return (x + y) % 2 == 0 ? \"square-black\" : \"square-white\";\n    },\n  },\n  computed: {\n    reverseBoards(): Board[] {\n      return this.boards.slice().reverse();\n    },\n  },\n});\n</script>\n\n<style scoped>\n.board {\n  width: 256px;\n  height: 256px;\n  border: 4px solid black;\n  margin-bottom: 50px;\n  margin-left: 100px;\n}\n.square {\n  width: 32px;\n  height: 32px;\n  float: left;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.square-black {\n  background-color: rgb(160, 108, 41);\n}\n.square-white {\n  background-color: rgb(255, 251, 230);\n}\n.square-moving {\n  background-color: rgb(127, 236, 132);\n}\n.piece {\n  font-size: 30px;\n}\n.piece-forward-past {\n  color: rgb(116, 18, 38);\n}\n.piece-forward-present {\n  color: crimson;\n}\n.piece-forward-future {\n  color: rgb(245, 198, 207);\n}\n.piece-inverted-past {\n  color: rgb(10, 10, 93);\n}\n.piece-inverted-present {\n  color: rgb(26, 26, 204);\n}\n.piece-inverted-future {\n  color: rgb(169, 169, 240);\n}\n</style>\n","\nenum Owner {\n  me,\n  you,\n}\n\nenum Tense {\n  past,\n  present,\n  future,\n}\n\nenum TimeDirection {\n  forward,\n  inverted,\n}\nfunction MoveForwardPieces(data: Chessehc, x: number, y: number, t: number) {\n  // suppress error\n  if (data.selected_square === null) {\n    return;\n  }\n\n  const selected_board_index = data.boards.findIndex((e) => e.time === t)!;\n\n  let current_board = data.boards[selected_board_index];\n  let next_board = data.boards[selected_board_index + 1];\n  if (next_board === undefined) {\n    // make future board\n    data.boards.push(current_board.makeFuture());\n  } else {\n    const boards_size = data.boards.length;\n\n    // move future pieces\n    // copy future pieces\n    for (let i = selected_board_index + 1; i < boards_size; ++i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      let board_i_clicked_square = data.boards[i].squares.at(x, y);\n      if (\n        board_i_clicked_square.piece === null ||\n        (board_i_clicked_square.piece.direction === TimeDirection.forward &&\n          board_i_clicked_square.piece.tense === Tense.future)\n        // TODO: case that both forward and inverted future pieces in the same square\n      ) {\n        board_i_clicked_square.piece = board_i_selected_square.piece;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n    // delete future selected pieces\n    for (let i = selected_board_index + 1; i < boards_size; ++i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      if (\n        board_i_selected_square.piece !== null &&\n        board_i_selected_square.piece.direction === TimeDirection.forward &&\n        board_i_selected_square.piece.tense === Tense.future\n      ) {\n        board_i_selected_square.piece = null;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n  }\n  // change tense of past pieces\n  for (let i = selected_board_index - 1; i >= 0; --i) {\n    let board_i_selected_square = data.boards[i].squares.at(\n      data.selected_square.x,\n      data.selected_square.y\n    );\n    let board_i_selected_piece_tence = board_i_selected_square.piece!.tense;\n    board_i_selected_square.piece!.tense = Tense.past;\n    if (board_i_selected_piece_tence === Tense.present) {\n      // blocked by present piece\n      break;\n    }\n  }\n}\nfunction MoveInvertedPieces(data: Chessehc, x: number, y: number, t: number) {\n  // suppress error\n  if (data.selected_square === null) {\n    return;\n  }\n\n  let selected_board_index = data.boards.findIndex((e) => e.time === t)!;\n\n  let current_board = data.boards[selected_board_index];\n  let next_board = data.boards[selected_board_index - 1];\n  if (next_board === undefined) {\n    // make future board\n    data.boards.unshift(current_board.makePast());\n    selected_board_index = selected_board_index + 1;\n  } else {\n    // move future pieces\n    // copy future pieces\n    for (let i = selected_board_index - 1; i >= 0; --i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      let board_i_clicked_square = data.boards[i].squares.at(x, y);\n      if (\n        board_i_clicked_square.piece === null ||\n        (board_i_clicked_square.piece.direction === TimeDirection.inverted &&\n          board_i_clicked_square.piece.tense === Tense.future)\n        // TODO: case that both forward and inverted future pieces in the same square\n      ) {\n        board_i_clicked_square.piece = board_i_selected_square.piece;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n    // delete future selected pieces\n    for (let i = selected_board_index - 1; i >= 0; --i) {\n      let board_i_selected_square = data.boards[i].squares.at(\n        data.selected_square.x,\n        data.selected_square.y\n      );\n      if (\n        board_i_selected_square.piece !== null &&\n        board_i_selected_square.piece.direction === TimeDirection.inverted &&\n        board_i_selected_square.piece.tense === Tense.future\n      ) {\n        board_i_selected_square.piece = null;\n      } else {\n        // blocked by other piece\n        break;\n      }\n    }\n  }\n  const boards_size = data.boards.length;\n  // change tense of past pieces\n  for (let i = selected_board_index + 1; i < boards_size; ++i) {\n    let board_i_selected_square = data.boards[i].squares.at(\n      data.selected_square.x,\n      data.selected_square.y\n    );\n    let board_i_selected_piece_tence = board_i_selected_square.piece!.tense;\n    board_i_selected_square.piece!.tense = Tense.past;\n    if (board_i_selected_piece_tence === Tense.present) {\n      // blocked by present piece\n      break;\n    }\n  }\n}\n\nclass Piece {\n  owner: Owner;\n  tense: Tense;\n  direction: TimeDirection;\n  constructor(owner: Owner, tense: Tense, direction: TimeDirection) {\n    this.owner = owner;\n    this.tense = tense;\n    this.direction = direction;\n  }\n  text() {\n    return this.owner == Owner.me ? \"▲\" : \"▼\";\n  }\n  styleClass() {\n    switch (this.tense) {\n      case Tense.past:\n        return this.direction === TimeDirection.forward\n          ? \"piece-forward-past\"\n          : \"piece-inverted-past\";\n      case Tense.present:\n        return this.direction === TimeDirection.forward\n          ? \"piece-forward-present\"\n          : \"piece-inverted-present\";\n      case Tense.future:\n        return this.direction === TimeDirection.forward\n          ? \"piece-forward-future\"\n          : \"piece-inverted-future\";\n    }\n  }\n  clone() {\n    return new Piece(this.owner, this.tense, this.direction);\n  }\n  makeFuture() {\n    if (this.tense === Tense.present) {\n      if (this.direction === TimeDirection.forward) {\n        return new Piece(this.owner, Tense.future, this.direction);\n      } else {\n        return null;\n      }\n    } else {\n      return new Piece(this.owner, this.tense, this.direction);\n    }\n  }\n  makePast() {\n    if (this.tense === Tense.present) {\n      if (this.direction === TimeDirection.forward) {\n        return null;\n      } else {\n        return new Piece(this.owner, Tense.future, this.direction);\n      }\n    } else {\n      return new Piece(this.owner, this.tense, this.direction);\n    }\n  }\n  invert() {\n    this.direction =\n      this.direction === TimeDirection.forward\n        ? TimeDirection.inverted\n        : TimeDirection.forward;\n  }\n}\n\nclass Square {\n  piece: Piece | null;\n  constructor(piece: Piece | null) {\n    this.piece = piece;\n  }\n  clone() {\n    return new Square(this.piece ? this.piece.clone() : null);\n  }\n  makeFuture() {\n    return new Square(this.piece ? this.piece.makeFuture() : null);\n  }\n  makePast() {\n    return new Square(this.piece ? this.piece.makePast() : null);\n  }\n}\nclass Squares {\n  width: number;\n  value: Square[];\n  constructor(width: number, value: Square[]) {\n    this.width = width;\n    this.value = value;\n  }\n  static empty(x: number, y: number) {\n    return new Squares(\n      x,\n      Array(x * y)\n        .fill({})\n        .map((e) => new Square(null))\n    );\n  }\n  at(x: number, y: number) {\n    return this.value[y * this.width + x];\n  }\n  makeFuture() {\n    return new Squares(\n      this.width,\n      this.value.map((e) => e.makeFuture())\n    );\n  }\n  makePast() {\n    return new Squares(\n      this.width,\n      this.value.map((e) => e.makePast())\n    );\n  }\n}\n\nclass SelectedSquare {\n  square_ref: Square;\n  piece_ref: Piece;\n  x: number;\n  y: number;\n  t: number;\n  constructor(\n    square_ref: Square,\n    piece_ref: Piece,\n    x: number,\n    y: number,\n    t: number\n  ) {\n    this.square_ref = square_ref;\n    this.piece_ref = piece_ref;\n    this.x = x;\n    this.y = y;\n    this.t = t;\n  }\n  clone() {\n    return new SelectedSquare(\n      this.square_ref,\n      this.piece_ref,\n      this.x,\n      this.y,\n      this.t\n    );\n  }\n}\n\nclass Board {\n  time: number;\n  squares: Squares;\n  constructor(time: number, squares: Squares) {\n    this.time = time;\n    this.squares = squares;\n  }\n  makeFuture() {\n    return new Board(this.time + 1, this.squares.makeFuture());\n  }\n  makePast() {\n    return new Board(this.time - 1, this.squares.makePast());\n  }\n}\n\nimport { defineComponent } from \"vue\";\n\ninterface Chessehc {\n  boards: Board[];\n  selected_square: null | SelectedSquare;\n}\n\nexport default defineComponent({\n  name: \"Chessehc\",\n  data() {\n    return {\n      boards: [] as Board[],\n      selected_square: null as null | SelectedSquare,\n    } as Chessehc;\n  },\n  mounted() {\n    let obj = Squares.empty(8, 8);\n    this.boards = [new Board(0, obj)];\n    for (let i = 0; i < 16; ++i) {\n      this.boards[0].squares.value[i].piece = new Piece(\n        Owner.you,\n        Tense.present,\n        TimeDirection.forward\n      );\n    }\n    for (let i = 0; i < 16; ++i) {\n      this.boards[0].squares.value[48 + i].piece = new Piece(\n        Owner.me,\n        Tense.present,\n        TimeDirection.forward\n      );\n    }\n    this.boards[0].squares.value[62].piece!.direction = TimeDirection.inverted;\n    this.boards[0].squares.value[63].piece!.direction = TimeDirection.inverted;\n    this.boards.push(this.boards[0].makeFuture());\n    this.boards.unshift(this.boards[0].makePast());\n  },\n  methods: {\n    clickSquare(square: Square, x: number, y: number, t: number) {\n      if (this.selected_square === null) {\n        // select\n        if (square.piece) {\n          if (square.piece.tense === Tense.future) {\n            this.selected_square = new SelectedSquare(\n              square,\n              square.piece,\n              x,\n              y,\n              t\n            );\n          }\n        }\n        return;\n      }\n\n      // if click same square\n      if (square === this.selected_square.square_ref) {\n        // cancel\n        this.selected_square = null;\n        return;\n      }\n\n      // move\n      if (this.selected_square.t === t) {\n        // move current piece\n        square.piece = this.selected_square.piece_ref;\n        square.piece.tense = Tense.present;\n        this.selected_square.square_ref.piece = null;\n\n        let selected_direction = this.selected_square.piece_ref.direction;\n        if (selected_direction === TimeDirection.forward) {\n          MoveForwardPieces(this, x, y, t);\n        } else {\n          MoveInvertedPieces(this, x, y, t);\n        }\n\n        this.selected_square = null;\n      }\n    },\n    squareColor(square: Square, x: number, y: number) {\n      if (\n        this.selected_square !== null &&\n        this.selected_square.square_ref === square\n      ) {\n        return \"square-moving\";\n      }\n      return (x + y) % 2 == 0 ? \"square-black\" : \"square-white\";\n    },\n  },\n  computed: {\n    reverseBoards(): Board[] {\n      return this.boards.slice().reverse();\n    },\n  },\n});\n","import { render } from \"./Chessehc.vue?vue&type=template&id=abda89c0&scoped=true\"\nimport script from \"./Chessehc.vue?vue&type=script&lang=ts\"\nexport * from \"./Chessehc.vue?vue&type=script&lang=ts\"\n\nimport \"./Chessehc.vue?vue&type=style&index=0&id=abda89c0&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-abda89c0\"\n\nexport default script","\nimport { defineComponent } from \"vue\";\nimport Chessehc from \"./components/Chessehc.vue\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Chessehc,\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=45fd73b4\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"sourceRoot":""}